// ‡πÉ‡∏ä‡πâ Node.js fetch (Netlify runtime ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á install ‡πÄ‡∏û‡∏¥‡πà‡∏°)
exports.handler = async function (event) {
  // ‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢ GET: ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ô browser ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ function ‡∏¢‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà
  if (event.httpMethod === 'GET') {
    return {
      statusCode: 200,
      body: JSON.stringify({ ok: true, ping: 'telegram function is alive' })
    };
  }

  try {
    const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
    const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

    if (!TELEGRAM_TOKEN || !TELEGRAM_CHAT_ID) {
      return {
        statusCode: 500,
        body: JSON.stringify({ ok: false, error: 'Missing environment variables' })
      };
    }

    // ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏à‡∏≤‡∏Å index.html
    const payload = JSON.parse(event.body || "{}");

    // ‡∏à‡∏±‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡∏¢‡πÜ
    const lines = [
      'üì¶ ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ï‡πä‡∏≠‡∏Å',
      `‡∏™‡∏≤‡∏Ç‡∏≤: ${payload.branch || '-'}`,
      `‡πÇ‡∏´‡∏°‡∏î: ${payload.mode === 'open' ? '‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô' : '‡∏õ‡∏¥‡∏î‡∏£‡πâ‡∏≤‡∏ô'}`,
      `‡πÄ‡∏ß‡∏•‡∏≤: ${payload.time || ''}`,
      `‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∑‡∏ö‡∏´‡∏ô‡πâ‡∏≤: ${payload.progress ?? 0}%`,
    ];

    const orders = Array.isArray(payload.orders) ? payload.orders : [];
    if (orders.length > 0) {
      lines.push('‚Äî ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏° ‚Äî', ...orders.map(x => `‚Ä¢ ${x}`));
    } else {
      lines.push('‚Äî ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏° ‚Äî');
    }

    // ‡∏¢‡∏¥‡∏á‡πÑ‡∏õ‡∏´‡∏≤ Telegram API
    const resp = await fetch(`https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        chat_id: TELEGRAM_CHAT_ID,
        text: lines.join('\n')
      })
    });

    const data = await resp.json();
    if (!data.ok) throw new Error(data.description || 'Telegram error');

    return { statusCode: 200, body: JSON.stringify({ ok: true }) };
  } catch (e) {
    return { statusCode: 500, body: JSON.stringify({ ok: false, error: e.message }) };
  }
};
